<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PlayGen.SUGAR.Contracts</name>
    </assembly>
    <members>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.AccountRequest">
            <summary>
            Encapsulates log-in details.
            </summary>
            <example>
            JSON
            {
            Name : "User Name",
            Password : "Their Password",
            AutoLogin : true
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountRequest.Name">
            <summary>
            The user's log-in name.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountRequest.Password">
            <summary>
            The user's password.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountRequest.SourceToken">
            <summary>
            The source from which the user is trying to log-in.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.AccountResponse">
            <summary>
            Encapsulates user and token details at log-in.
            </summary>
            <example>
            JSON
            {
            User : {
            Id : 1,
            Name : "User Name"
            }
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountResponse.User">
            <summary>
            ActorResponse object containing the user details.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.AccountSourceRequest">
            <summary>
            Encapsulates log-in source details.
            </summary>
            <example>
            JSON
            {
            Name : "SUGAR",
            RequiresPassword : true
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceRequest.Description">
            <summary>
            The source description.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceRequest.Token">
            <summary>
            The source token.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceRequest.RequiresPassword">
            <summary>
            Whether the user needs to pass a password when logging in via this source
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.AccountSourceResponse">
            <summary>
            Encapsulates log-in source details.
            </summary>
            <example>
            JSON
            {
            User : {
            Id : 1,
            Name : "SUGAR",
            RequiresPassword : true
            }
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceResponse.Id">
            <summary>
            The unqiue identifier for the game.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceResponse.Description">
            <summary>
            The source description.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceResponse.Token">
            <summary>
            The source token.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.AccountSourceResponse.RequiresPassword">
            <summary>
            Whether the user needs to pass a password when logging in via this source
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ActorClaimRequest">
            <summary>
            Encapsulates actorclaim details.
            </summary>
            <example>
            JSON
            {
            ActorId : 1,
            ClaimId : 1,
            EntityId : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimRequest.ActorId">
            <summary>
            The ID of the actor related to this actorclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimRequest.ClaimId">
            <summary>
            The ID of the claim related to this actorclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimRequest.EntityId">
            <summary>
            The ID of the entity (game, actor etc) related to this actorclaim.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ActorClaimResponse">
            <summary>
            Encapsulates actorclaim details from the server.
            </summary>
            <example>
            JSON
            {
            Id : 1,
            ActorId : 1,
            RoleId : 1,
            EntityId : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimResponse.Id">
            <summary>
            The unqiue identifier for the actorclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimResponse.ActorId">
            <summary>
            The ID of the actor related to this actorclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimResponse.ClaimId">
            <summary>
            The ID of the claim related to this actorclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorClaimResponse.EntityId">
            <summary>
            The ID of the entity (game, actor etc) related to this actorclaim.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ActorRequest">
            <summary>
            Encapsulates user and group details.
            </summary>
            <example>
            JSON
            {
            Name : "Actor Name"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRequest.Name">
            <summary>
            The display name of the user/group.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ActorResponse">
            <summary>
            Encapsulates user and group details from the server.
            </summary>
            <example>
            JSON
            {
            Id : 1,
            Name : "Actor Name"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorResponse.Id">
            <summary>
            The unqiue identifier for the user/group.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorResponse.Name">
            <summary>
            The display name of the user/group.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ActorRoleRequest">
            <summary>
            Encapsulates actorrole details.
            </summary>
            <example>
            JSON
            {
            ActorId : 1,
            RoleId : 1,
            EntityId : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleRequest.ActorId">
            <summary>
            The ID of the actor related to this actorrole.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleRequest.RoleId">
            <summary>
            The ID of the role related to this actorrole.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleRequest.EntityId">
            <summary>
            The ID of the entity (game, actor etc) related to this actorrole.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ActorRoleResponse">
            <summary>
            Encapsulates actorrole details from the server.
            </summary>
            <example>
            JSON
            {
            Id : 1,
            ActorId : 1,
            RoleId : 1,
            EntityId : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleResponse.Id">
            <summary>
            The unqiue identifier for the actorrole.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleResponse.ActorId">
            <summary>
            The ID of the actor related to this actorrole.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleResponse.RoleId">
            <summary>
            The ID of the role related to this actorrole.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ActorRoleResponse.EntityId">
            <summary>
            The ID of the entity (game, actor etc) related to this actorrole.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ClaimResponse">
            <summary>
            Encapsulates role details.
            </summary>
            <example>
            JSON
            {
            Id : 1,
            Token : "CreateGame",
            Description : "Allows for the creation of new games",
            ClaimScope : "Game"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ClaimResponse.Id">
            <summary>
            The ID of the claim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ClaimResponse.Token">
            <summary>
            The display name for the claim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ClaimResponse.Description">
            <summary>
            A description of the claim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ClaimResponse.ClaimScope">
            <summary>
            The ClaimScope of this claim.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest">
            <summary>
            Encapsulates achievement/skill details.
            </summary>
            <example>
            JSON
            {
            Token : "AN_ACHIEVEMENT_TOKEN",
            GameId : 1,
            Name : "Achievement Unlocked",
            Description : "Fulfil the criteria to get the reward",
            ActorType : "User",
            EvaluationCriteria : [{
            Key : "Criteria Key",
            DataType : "Long",
            CriteriaQueryType : "Any",
            ComparisonType : "Equals",
            Scope : "Actor",
            Value : "5"
            }],
            Reward : [{
            Key : "Reward Key",
            DataType : "Float",
            Value : "10.5"
            }]
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.Token">
            <summary>
            A unique identifier used in development to reference the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.GameId">
            <summary>
            The ID of the Game which this achievement/skill should belong to. Can be left null to make the achievement/skill system-wide.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.Name">
            <summary>
            The display name for the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.Description">
            <summary>
            The description of the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.ActorType">
            <summary>
            The type of actor which this achievement/skill is intended to be completed by.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.EvaluationCriterias">
            <summary>
            A list of criteria which will be checked in order to see if an actor has completed the achievement/skill.
            Must contain at least one criteria.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest.Rewards">
            <summary>
            A list of rewards that will be provided to the actor upon completion of the achievement/skill criteria.
            An achievement does not need to contain a reward.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationCriteriaCreateRequest">
            <summary>
            Encapsulates requirements for completing an achievement or skill.
            </summary>
            <example>
            JSON
            {
            Key : "GameData Key",
            DataType : "String",
            CriteriaQueryType : "Any",
            ComparisonType : "Equals",
            Scope : "Actor",
            Value : "GameData Key Value"
            }
            </example>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationCriteriaResponse">
            <summary>
            Encapsulates requirements for completing an achievement or skill.
            </summary>
            <example>
            JSON
            {
            Key : "GameData Key",
            DataType : "String",
            CriteriaQueryType : "Any",
            ComparisonType : "Equals",
            Scope : "Actor",
            Value : "GameData Key Value"
            }
            </example>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationCriteriaUpdateRequest">
            <summary>
            Encapsulates requirements for completing an achievement or skill.
            </summary>
            <example>
            JSON
            {
            Key : "GameData Key",
            DataType : "String",
            CriteriaQueryType : "Any",
            ComparisonType : "Equals",
            Scope : "Actor",
            Value : "GameData Key Value"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationCriteriaUpdateRequest.Id">
            <summary>
            The unqiue identifier for this type.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse">
            <summary>
            Encapsulates current progress to completing an achievement.
            </summary>
            <example>
            JSON
            {
            Actor : [{
            Id : 1,
            Name : "Name"
            }],
            Name : "Achievement Unlocked",
            Progress : 0
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse.Actor">
            <summary>
            The details of the actor whose progress was being checked.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse.Name">
            <summary>
            The name of the achievement/skill which progress was being checked for.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse.Progress">
            <summary>
            Progress of current achievement/skill [0 to 1].
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse.Type">
            <summary>
            Skill or Achievement
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse">
            <summary>
            Encapsulates achievement/skill details returned from the server.
            </summary>
            <example>
            JSON
            {
            Token : "AN_ACHIEVEMENT_TOKEN",
            GameId : 1,
            Name : "Achievement Unlocked",
            Description : "Fulfil the criteria to get the reward",
            ActorType : "User",
            EvaluationCriteria : [{
            Key : "Criteria Key",
            DataType : "Long",
            CriteriaQueryType : "Any",
            ComparisonType : "Equals",
            Scope : "Actor",
            Value : "5"
            }],
            Reward : [{
            Key : "Reward Key",
            DataType : "Float",
            Value : "10.5"
            }]
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.Id">
            <summary>
            The unqiue identifier for the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.Token">
            <summary>
            A unique identifier used in development to reference the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.GameId">
            <summary>
            The ID of the Game which this achievement/skill belongs to.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.Name">
            <summary>
            The display name for the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.Description">
            <summary>
            The description of the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.ActorType">
            <summary>
            The type of actor which this achievement/skill is intended to be completed by.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.EvaluationCriterias">
            <summary>
            A list of criteria which is checked in order to see if an actor has completed the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse.Rewards">
            <summary>
            A list of rewards that is provided to the actor upon completion of the achievement/skill criteria.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest">
            <summary>
            Encapsulates achievement/skill details.
            </summary>
            <example>
            JSON
            {
            Token : "AN_ACHIEVEMENT_TOKEN",
            GameId : 1,
            Name : "Achievement Unlocked",
            Description : "Fulfil the criteria to get the reward",
            ActorType : "User",
            EvaluationCriteria : [{
            Key : "Criteria Key",
            DataType : "Long",
            CriteriaQueryType : "Any",
            ComparisonType : "Equals",
            Scope : "Actor",
            Value : "5"
            }],
            Reward : [{
            Key : "Reward Key",
            DataType : "Float",
            Value : "10.5"
            }]
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.Id">
            <summary>
            The unqiue identifier for the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.Token">
            <summary>
            A unique identifier used in development to reference the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.GameId">
            <summary>
            The ID of the Game which this achievement/skill should belong to. Can be left null to make the achievement/skill system-wide.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.Name">
            <summary>
            The display name for the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.Description">
            <summary>
            The description of the achievement/skill.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.ActorType">
            <summary>
            The type of actor which this achievement/skill is intended to be completed by.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.EvaluationCriterias">
            <summary>
            A list of criteria which will be checked in order to see if an actor has completed the achievement/skill.
            Must contain at least one criteria.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest.Rewards">
            <summary>
            A list of rewards that will be provided to the actor upon completion of the achievement/skill criteria.
            An achievement does not need to contain a reward.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.GameRequest">
            <summary>
            Encapsulates game details.
            </summary>
            <example>
            JSON
            {
            Name : "Game Name"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.GameRequest.Name">
            <summary>
            The display name for the game.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.GameResponse">
            <summary>
            Encapsulates game details from the server.
            </summary>
            <example>
            JSON
            {
            Id : 1,
            Name : "Game Name"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.GameResponse.Id">
            <summary>
            The unqiue identifier for the game.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.GameResponse.Name">
            <summary>
            The display name of the game.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest">
            <summary>
            Encapsulates leaderboard details.
            </summary>
            <example>
            JSON
            {
            Token : "THE_LEADERBOARD_TOKEN",
            GameId : 1,
            Name : "Leaderboard Name",
            Key : "Key",
            ActorType : "User",
            SaveDataType : "Long",
            CriteriaScope : "Actor",
            LeaderboardType : "Highest"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.Token">
            <summary>
            A unique identifier used in development to reference the leaderboard.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.GameId">
            <summary>
            The Id of the Game which this leaderboards belongs to. Can be left null to relate this leaderboard to the system rather than a game.
            This Id is also used when gathering GameData using the Key provided.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.Name">
            <summary>
            The display name of the leaderboard.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.Key">
            <summary>
            The GameData key which is checked against in order to create the leaderboard standings.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.ActorType">
            <summary>
            The type of actor which this leaderboard is intended for.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.SaveDataType">
            <summary>
            The SaveDataType of the GameData being checked against.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.CriteriaScope">
            <summary>
            Whether the criteria will be checked against the actor or relatedactors (i.e. group members, user friends).
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest.LeaderboardType">
            <summary>
            The method which data will be collected and sorted for this leaderboard.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse">
            <summary>
            Encapsulates leaderboard details returned from the server.
            </summary>
            <example>
            JSON
            {
            Token : "THE_LEADERBOARD_TOKEN",
            GameId : 1,
            Name : "Leaderboard Name",
            Key : "Key",
            ActorType : "User",
            SaveDataType : "Long",
            CriteriaScope : "Actor",
            LeaderboardType : "Highest"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.Token">
            <summary>
            The unique identifier used in development to reference the leaderboard.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.GameId">
            <summary>
            The Id of the game which this leaderboard belongs to.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.Name">
            <summary>
            The display name of the leaderboard.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.Key">
            <summary>
            The GameData key which is checked against in order to create the leaderboard standings.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.ActorType">
            <summary>
            The type of actor which this leaderboard is intended for.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.SaveDataType">
            <summary>
            The SaveDataType of the GameData being checked against.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.CriteriaScope">
            <summary>
            Whether the criteria is checked against the actor or relatedactors (i.e. group members, user friends).
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse.LeaderboardType">
            <summary>
            The method which collects data and sorts it for this leaderboard.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest">
            <summary>
            Encapsulates leaderboard current standings request.
            </summary>
            <example>
            JSON
            {
            LeaderboardToken : "AN_ACHIEVEMENT_TOKEN",
            GameId : 1,
            ActorId : 1,
            LeaderboardFilterType : "Near",
            Limit : 10,
            Offset : 0,
            DateStart : "2016-01-01 00:00:00",
            DateEnd : "2016-12-31 23:59:59"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.LeaderboardToken">
            <summary>
            The Token of the Leaderboard which the standings are being gathered for.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.GameId">
            <summary>
            The Id of the Game the leaderboard. Can be left null for system-wide leaderboards.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.ActorId">
            <summary>
            The Id of an Actor. Required for getting standings for Near, Friends (user only) and Group Members (group only)
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.LeaderboardFilterType">
            <summary>
            The filter for what standings will be returned.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.PageLimit">
            <summary>
            The maximum number of results which will be returned.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.PageOffset">
            <summary>
            The set of results which will be returned based on the limit.
            0 returns the first set of results for Top, Friends and Group Member and the nearest range for Near.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.DateStart">
            <summary>
            The earliest point which data should be collected from.
            Can be left null to set no earliest point.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest.DateEnd">
            <summary>
            The latest point which data should be collected from.
            Can be left null to gather all data up to the present time.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse">
            <summary>
            Encapsulates leaderboard standings details from the database.
            </summary>
            <example>
            JSON
            {
            ActorId : 1,
            ActorName : "Name",
            Value : "10",
            Ranking : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse.ActorId">
            <summary>
            The Id of the Actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse.ActorName">
            <summary>
            The name of the Actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse.Value">
            <summary>
            The value returned from the query for the leaderboard.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse.Ranking">
            <summary>
            The actor's global ranking within that leaderboard.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RelationshipRequest">
            <summary>
            Encapsulates relationship details.
            </summary>
            <example>
            JSON
            {
            RequestorId : 1,
            AcceptorId : 2,
            AutoAccept : true
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipRequest.RequestorId">
            <summary>
            The Id of the requesting actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipRequest.AcceptorId">
            <summary>
            The Id of the receiving actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipRequest.AutoAccept">
            <summary>
            Whether the request should be automatically accepted.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RelationshipResponse">
            <summary>
            Encapsulates relationship details from the server.
            </summary>
            <example>
            JSON
            {
            RequestorId : 1,
            AcceptorId : 2
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipResponse.RequestorId">
            <summary>
            The Id of the requesting actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipResponse.AcceptorId">
            <summary>
            The Id of the receiving actor.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate">
            <summary>
            Encapsulates relationship details, including updated status of the relationship.
            </summary>
            <example>
            JSON
            {
            RequestorId : 1,
            AcceptorId : 2,
            Accepted : true
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate.RequestorId">
            <summary>
            The Id of the requesting actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate.AcceptorId">
            <summary>
            The Id of the receiving actor.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate.Accepted">
            <summary>
            Whether the request was accepted or declined.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ResourceAddRequest">
            <summary>
            Encapsulates Resource Data details.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceAddRequest.ActorId">
            <summary>
            The id of the Actor which this Resource is being ensigned to. Can be left null to ensign to the system/game.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceAddRequest.GameId">
            <summary>
            The id of the Game which this Resource relates to. Can be left null to relate the Resource to the wider system.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceAddRequest.Key">
            <summary>
            The identifier/name of the Resource.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceAddRequest.Quantity">
            <summary>
            The value of the Resource.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ResourceResponse">
            <summary>
            Encapsulates resource details from the server.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceResponse.Id">
            <summary>
            The id of the Resource.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceResponse.ActorId">
            <summary>
            The id of the Actor which this Resource relates to.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceResponse.GameId">
            <summary>
            The id of the Game which this Resource relates to.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceResponse.Key">
            <summary>
            The identifier/name of the Resource.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceResponse.Quantity">
            <summary>
            The amount of the Resource belonging to the actor/game.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ResourceTransferRequest">
            <summary>
            Encapsulates Resource Transfer details.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferRequest.SenderActorId">
            <summary>
            The Id of the Actor who will send this Resource. Can be left null to only give/take from the current owner.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferRequest.RecipientActorId">
            <summary>
            The Id of the Actor who will receive this Resource. Can be left null to only give/take from the current owner.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferRequest.GameId">
            <summary>
            The Id of the Game which this Resource belongs to. Left null for system-wise resources.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferRequest.Quantity">
            <summary>
            The amount of the Resource being transferred.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferRequest.Key">
            <summary>
            The key of the Resource being transferred.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.ResourceTransferResponse">
            <summary>
            Encapsulates Resource Transfer details from the server.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferResponse.FromResource">
            <summary>
            The new details of the Resource being transferred from.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.ResourceTransferResponse.ToResource">
            <summary>
            The new details of the Resource being transferred to.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RewardCreateRequest">
            <summary>
            Encapsulates the reward given for completing an achievement or skill.
            </summary>
            <example>
            JSON
            {
            Key : "Reward Key",
            DataType : "Float",
            Value : "10.5"
            }
            </example>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RewardResponse">
            <summary>
            Encapsulates the reward given for completing an achievement or skill.
            </summary>
            <example>
            JSON
            {
            Key : "Reward Key",
            DataType : "Float",
            Value : "10.5"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RewardResponse.Id">
            <summary>
            The unqiue identifier for this type.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RewardUpdateRequest">
            <summary>
            Encapsulates the reward given for completing an achievement or skill.
            </summary>
            <example>
            JSON
            {
            Key : "Reward Key",
            DataType : "Float",
            Value : "10.5"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RewardUpdateRequest.Id">
            <summary>
            The unqiue identifier for this type.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RoleClaimRequest">
            <summary>
            Encapsulates roleclaim details.
            </summary>
            <example>
            JSON
            {
            RoleId : 1,
            ClaimId : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleClaimRequest.RoleId">
            <summary>
            The ID of the role related to this roleclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleClaimRequest.ClaimId">
            <summary>
            The ID of the claim related to this roleclaim.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RoleClaimResponse">
            <summary>
            Encapsulates roleclaim details from the server.
            </summary>
            <example>
            JSON
            {
            RoleId : 1,
            ClaimId : 1
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleClaimResponse.RoleId">
            <summary>
            The ID of the role related to this roleclaim.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleClaimResponse.ClaimId">
            <summary>
            The ID of the claim related to this roleclaim.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RoleRequest">
            <summary>
            Encapsulates role details.
            </summary>
            <example>
            JSON
            {
            Name : "Role Name"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleRequest.Name">
            <summary>
            The display name for the role.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleRequest.ClaimScope">
            <summary>
            The ClaimScope of this role.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.RoleResponse">
            <summary>
            Encapsulates role details from the server.
            </summary>
            <example>
            JSON
            {
            Id : 1,
            Name : "Role Name"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleResponse.Id">
            <summary>
            The unqiue identifier for the role.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleResponse.Name">
            <summary>
            The display name of the role.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.RoleResponse.ClaimScope">
            <summary>
            The ClaimScope of this role.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.SaveDataRequest">
            <summary>
            Encapsulates ActorData/GameData details.
            </summary>
            <example>
            JSON
            {
            ActorId : 1,
            GameId : 1,
            Key : "Data Key",
            Value : "10",
            SaveDataType : "Long"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataRequest.ActorId">
            <summary>
            The id of the Actor which this ActorData/GameData is being ensigned to. Can be left null to ensign to the system/game.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataRequest.GameId">
            <summary>
            The id of the Game which this ActorData/GameData relates to. Can be left null to relate the ActorData/GameData to the wider system.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataRequest.Key">
            <summary>
            The identifier of the data being stored.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataRequest.Value">
            <summary>
            The value of the data being stored.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataRequest.SaveDataType">
            <summary>
            The type of data which is being stored.
            </summary>
        </member>
        <member name="T:PlayGen.SUGAR.Contracts.Shared.SaveDataResponse">
            <summary>
            Encapsulates ActorData/GameData details from the server.
            </summary>
            <example>
            JSON
            {
            ActorId : 1,
            GameId : 1,
            Key : "Data Key",
            Value : "10",
            SaveDataType : "Long"
            }
            </example>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataResponse.ActorId">
            <summary>
            The id of the Actor which this ActorData/GameData relates to.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataResponse.GameId">
            <summary>
            The id of the Game which this ActorData/GameData relates to.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataResponse.Key">
            <summary>
            The identifier of the data.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataResponse.Value">
            <summary>
            The value of the data.
            </summary>
        </member>
        <member name="P:PlayGen.SUGAR.Contracts.Shared.SaveDataResponse.SaveDataType">
            <summary>
            The type of the value for this data.
            </summary>
        </member>
    </members>
</doc>
